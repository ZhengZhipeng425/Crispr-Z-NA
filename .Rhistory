if(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::insatall("IntEREst")
BiocManager::install("IntEREst")
all
browseVignettes("IntEREst")
1:5 + 6:10
c( 1, 3, 6, 10, 15 ) + c( 0, 1, 3, 6, 10 )
sum( 1:5 )
median( 1:5 )
median( 1:5 )
-2 ^ 3
1:4 / 3
1:4 %/% 3
1:4 %% 3
> c( 3, 4 - 1, 1 + 2 ) == 3
c( 3, 4 - 1, 1 + 2 ) == 3
> c( 3, 4 - 1, 1 + 2 ) == 3
( 1:5 ) ^ 2 >= 16
sqrt( 2 ) ^ 2 == 2
sqrt( 2 ) ^ 2 - 2
c( "A", "B", "C" ) < "C"
x <- 1:5
y = 6:10
x + y
assign ( "my_local_variable", 9 ^ 3 + 10 ^ 3 )
assign ( "my_global_variable", 1 ^ 3, globalenv( ) )
my_local_variable
my_global_variable
z <- sin ( pi /2 ); z
( x <- 1:3 >= 2 )
( x <- 1:3 >= 2 )
( y <- 1:3 %% 2 ==0 )
( y <- 1:3 %% 2 ==0 )
x & y
!x
x & y
class( c( TRUE, FALSE ) )
class( sqrt( 1:10 ) )
class( 3 + 2i )
class( 1:5 )
class( c( "she", "sells" ) )
( gender <- factor( c( "male", "female", "female" ) ))
levels( gender )
gender
as.integer ( gender )
as.character ( gender )
x <- c( 1, 8, 23 ); for ( i in x ) print ( i )
num <- runif ( 10 )
summary( num )
str( num )
fac <- factor( sample( letters[1:5], 10, replace = TRUE ) )
summary( fac )
df <- data.frame ( num, fac )
summary( df )
attributes ( fac )
8.5:4.5
> 8.5:4.5
seq.int ( 3, 7, 2 )
length( 3:7 )
sn <- c("Sheena", "leads", "Sheila")
length ( sn )
x <- 1:4
names(x) <- c("A", "B", "C", "D")
x
x <- (1:5) ^ 2;x
x[1]; x[ c( 1, 3 ) ]
x[1]; x[ c( 1, 3 ) ]
x [ c( TRUE, FALSE, TRUE, FALSE, TRUE ) ]
names(x) <- c("A", "B", "C", "D", "E")
x [ c( "B", "D" ) ]
which ( x > 10 )
1:5 + 1
1:5 + 1:10
1:5 + 1:7
rep(1:3,3)
rep(1:3,each = 3)
rep(1:3,times = 3)
rep(1:3,times = 1:3)
(a_matrix <- matrix(1:12,nrow=4,dimnames = list(c("one", "two","three","four"),c("ein","zwei","drei"))))
(two_d_array <- array(1:12,dim=c(4,3),dimnames = list(c("one","two","three","four"),c("ein","zwei","drei"))))
identical(two_d_array, a_matrix)
class(two_d_array)
dim(a_matrix)
nrow(a_matrix)
ncol( a_matrix )
length( a_matrix )
dim( a_matrix ) <- c( 6, 2 )
dim( a_matrix ) <- c( 6, 2 )
a_m
a_matrix
rownames( a_matrix )
(a_matrix <- matrix(1:12,nrow=4,dimnames = list(c("one", "two","three","four"),c("ein","zwei","drei"))))
rownames( a_matrix )
rownames( a_matrix )
rownames( a_matrix )
colnames( a_matrix )
dimnames( a_matrix )
a_matrix[ 1, c( "zwei", "drei" ) ]
a_matrix[ 1, c( "zwei", "drei" ) ]
a_matrix[ 1, ]
(another_matrix <- matrix(seq.int(2,24,2),nrow = 4, dimnames = list(c("five","six","seven","eight"),c("vier","funf","sechs"))))
c( a_matrix, another_matrix )
cbind(a_matrix, another_matrix)
rbind(a_matrix, another_matrix)
a_matrix + another_matrix
a_matrix * another_matrix
t(a_matrix)
(a_list <- list(c(1,1,2,5,14,42),month.abb,matrix(c(3,-8,1,-3),nrow=2),asin))
names(a_list) <- c("catalan","months","involutary","arcsin")
a_list
(the_same_list <- list(catalan = c(1,1,2,5,14,42),months=month.abb,involutary=matrix(c(3,-8,1,-3), nrow=2),arcsin=asin))
l <- list(first=1,second=2,third=list(alpha=3.1,beta=3.2))
l[1:2]
l[-3]
l[c("first","second")]
l[[1]]
l[["first"]]
is.list(l[1])
is.list(l[[1]])
l[["third"]]["beta"]
l[["third"]][["beta"]]
l[[c("third","beta")]]
busy_beaver <- c(1,6,21,107)
as.list(busy_beaver)
as.numeric(list(1,6,21,107))
(prime_factors <- list(two=2,three=3,four=c(2,2),five=5,six=c(2,3),seven=7,eight=c(2,2,2),nine=c(3,3),ten=c(2,5)))
unlist(prime_factors)
c(list(a=1,b=2),list(3))
c(list(a=1,b=2),3)
(matrix_list_hybrid <- cbind(list(a=1,b=2),list(c=3,list(d=4))))
str(matrix_list_hybrid)
(a_data_frame <- data.frame(x=letters[1:5],y=rnorm(5),))
(a_data_frame <- data.frame(x=letters[1:5],y=rnorm(5),z=runif(5)>0.5))
y <-rnorms(5)
class(a_data_frame)
y<-rnorm(5)
names(y)<-month.name[1:5]
data.frame(x=letters[1:5],)
data.frame(x=letters[1:5],y=y,z=runif(5)>0.5)
data.frame(x=letters[1:5],y=y,z=runif(5)>0.5,row.names=c("Jackie","Tito","Jermaine","Marlon","Michael"))
rownames(a_data_frame)
a_data_frame[2:3,-3]
a_data_frame[c(FALSE,TRUE,TRUE,FALSE,FALSE),c("x","y")]
a_data_frame$x[2:3]
a_data_frame[[1]][2:3]
a_data_frame[a_data_frame$y>0|a_data_frame$z,"x"]
subset(a_data_frame,y>0|z,x)
t(a_data_frame)
t(a_data_frame)
another_data <- data.frame(z=rlnorm(5),y=sample(5),x=letters[3:7])
rbind(a_data_frame,another_data)
cbind(a_data_frame,another_data)
merge(a_data_frame,another_data,by="x")
colSums(a_data_frame[,2:3])
colMeans(a_data_frame[,2:3])
hypotenuse <- function(x,y){sqrt(x^2+y^2)}
hypotenuse(3,4)
hypotenuse(y=24,x=7)
formals(hypotenuse)
normalize <- function(x,m=mean(x),s=sd(x)){(x-m)/s}
normalized <- normalize(c(1,3,6,10,15))
mean(normalized)
sd(normalized)
do.call(hypotenuse,list(x=3,y=4))
f<- function(x){y<-1, g<-function(x){(x+y)/2},g(x)}
f<- function(x){y<-1 g<-function(x){(x+y)/2} g(x)}
f <- function(x)
{y<-1}
f <- function(x){y<-1;g<-function(x){(x+y)/2};g(x)}
f(sqrt(5))
paste(c("red","yellow"),"lorry")
paste(c("red","yellow"),"lorry", sep="-")
paste(c("red","yellow"),"lorry", collapse=",")
paste0(c("red","yellow"),"lorry")
x<-(1:15)^2
toString(x)
pow<-1:3
(power_of_e<-exp(pow))
sprintf("%s %d=%f","Euler's constant to the power", pow, powers_of_e)
sprintf("%s %d=%f","Euler's constant to the power", pow, power_of_e)
toupper("I'm Shouting")
tolower("I'm Whispering")
woodchuck <- c(
"How much wood would a woodchuck chuck",
"If a woodchuck could chuck wood?"
"He would chuck, he would, as much as he could"
woodchuck <- c("How much wood would a woodchuck chuck","If a woodchuck could chuck wood?","He would chuck, he would, as much as he could","And chuck as much wood as a woodchuck would","If a woodchuck could chuck wood.")
substring((woodchuck, 1:6,10))
substring(woodchuck, 1:6,10)
strplit(woodchuck," ", fixed = TRUE)
strsplit(woodchuck," ", fixed = TRUE)
(heights <- data.frame(height_cm=c(153,181,150,172,165,149,174,169,198,163),gender=c("female","male","female","male","male","female","female","male","male","male","female"))
q
(heights <- data.frame(height_cm=c(153,181,150,172,165,149,174,169,198,163),gender=c("female","male","female","male","male","female","female","male","male","female"))
)
class(heights$gender)
heights$gender
levels(heights$gender)
gender_char <- c("female","male","female","male","male","female","female","male","male","female")
(gender_fac <- factor(gender_char))
levels(heights$gender)
levels(height$gender)
levels(heights$gender)
levels(factor(heights$gender))
ages <- 16+50*rbeta(10000,2,3)
grouped_ages <-cut(ages,seq.int(16,66,10))
head(grouped_ages)
table(grouped_ages)
class(ages)
calss(grouped_ages)
class(grouped_ages)
gl(3,2)
gl(3,2,labels=c("placebo","drug A","drug B"))
gl(3,1,6, labels=c("placebo","drug A", "drug B"))
treatment <- gl(3,2,labels=c("placebo","drug A","drug B"))
gender <- gl(2,1,6,labels=c("female","male"))
interaction(treatment,gender)
if(TRUE) message("It was true!")
if(FALSE) message("It wasn't true!")
if(FALSE){message("This won't execute...")}else{message("but this will.")}
{greek<-switch("gama",alpha=1,beta=sqrt(4),gamma={a<-sin(pi/3);4*a^2})}
{greek<-switch("gamma",alpha=1,beta=sqrt(4),gamma={a<-sin(pi/3);4*a^2})}
(greek<-switch("gamma",alpha=1,beta=sqrt(4),gamma={a<-sin(pi/3);4*a^2}))
(greek<-switch("detla",alpha=1,beta=sqrt(4),gamma={a<-sin(pi/3);4*a^2}))
(greek<-switch("detla",alpha=1,beta=sqrt(4),gamma={a<-sin(pi/3);4*a^2},4))
switch(3,"first","second","third","fourth")
repeat{message("Happy Groundhog Day!");action <-sample(c("Learn French","Make an ice statue","Rob a bank","Win heart of an mc"),1}
repeat{message("Happy Groundhog Day!");action <-sample(c("Learn French","Make an ice statue","Rob a bank","Win heart of an mc"),1)message("action=",action);if(action=="Win heart of an mc")break}
repeat{message("Happy Groundhog Day!");action <-sample(c("Learn French","Make an ice statue","Rob a bank","Win heart of an mc"),1);message("action=",action);if(action=="Win heart of an mc")break}
action <- sample(c("Learn French","Make an ice statue","Rob a bank","Win heart of an mc"),1)
while(action!="Win heart of an mc"){message("Happy Groundhog Day!");action<-sample(c("Learn French","Make an ice statue","Rob a bank","Win heart of an mc"),1);message("action=",action)}
for (i in 1:5)message("i=",i)
for(yn in c(TRUE,FALSE,NA)){message=("This statement is ",yn)}
for(yn in c(TRUE, FALSE, NA)){message=("This statement is ",yn)}
for(yn in c(TRUE, FALSE, NA)){message("This statement is ",yn)}
source("~/Documents/GitHub/Crispr-Z-NA/waterfall_lowpositive.R", echo=TRUE)
library(ggplot2)
source("~/Documents/GitHub/Crispr-Z-NA/waterfall_lowpositive.R", echo=TRUE)
library(ggrepel)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(data_sorted)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(data_sorted)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(highlighted_data)
View(highlight_data)
View(highlight_data)
rm(highlight_data)
rm(highlighted_data)
rm(highlight_genes)
rm(label_x_pos)
rm(label_y_pos)
rm(label_y_positions)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(data_sorted)
print(label_y_values)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(tmp)
# 将 label_y 分配给对应的红色基因
debugSource("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
rm(highlight_data)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
View(data_sorted)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/waterfallplot_v3.R", echo=TRUE)
setwd("~/Documents/GitHub/Crispr-Z-NA")
source("~/Documents/GitHub/Crispr-Z-NA/LFC_histogram.R", echo=TRUE)
library(ggrepel)
install.packages("patchwork")
library(patchwork)
source("~/Documents/GitHub/Crispr-Z-NA/LFC_histogram.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/LFC_histogram.R", echo=TRUE)
source("~/Documents/GitHub/Crispr-Z-NA/LFC_histogram.R", echo=TRUE)
install.packages("pheatmap")
source("~/Documents/GitHub/Crispr-Z-NA/LFC_histogram.R", echo=TRUE)
browseVignettes("ggplot2")
